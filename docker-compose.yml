# https://medium.com/swlh/how-to-set-up-a-react-app-with-a-flask-and-mongodb-backend-using-docker-19b356180199
version: "3"
services:
  mongodb:
    image: mongo:latest
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "password"
      MONGO_INITDB_DATABASE: webapp
      MONGODB_DATA_DIR: /data/db
    volumes:
      # - ./database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodbdata:/data/db
    networks:
      - backend
    ports:
      - "27017:27017"

  webserver:
    depends_on:
      - mongodb
    build:
      context: webserver/
    restart: on-failure
    ports:
      - "5000:5000"
    environment:
      MONGODB_HOST: mongodb
      MONGODB_USERNAME: "apiuser"
      MONGODB_PASSWORD: "apipassword"
    volumes:
      - appdata:/var/www/
    networks:
      - frontend
      - backend

  view:
    depends_on:
      - webserver
    build:
      context: view/
    ports:
      - "3000:80"
    volumes:
      - ./view:/app
      - /app/node_modules
    networks:
      - frontend

  analysis:
    depends_on:
      - webserver
    build:
      context: analysis/
    ports:
      - "5001:5001"
    volumes:
      - nltkdata:/root/nltk_data
    networks:
      backend:
        aliases:
          - analysis.dev

  fetcher:
    depends_on:
      - webserver
    build:
      context: fetcher/
    ports:
      - "5002:5002"
    networks:
      backend:
        aliases:
          - fetcher.dev

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
  nltkdata:
    driver: local
